name: Freewave Android Build
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'App version'
        required: true
        default: '1.0.0'
      build_type:
        description: 'Build type (release, debug)'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - debug
      flavor:
        description: 'App flavor (production, staging)'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  build-android:
    name: ðŸŒŠ Freewave Android Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Freewave repository
        uses: actions/checkout@v3

      - name: Set up Flutter environment
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.0'
          architecture: x64
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Configure Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run Flutter tests
        run: flutter test

      - name: Set version in pubspec.yaml
        run: |
          sed -i "s/version: .*/version: ${{ github.event.inputs.version }}/" pubspec.yaml
          cat pubspec.yaml | grep "version:"

      - name: Build Freewave Android app
        if: ${{ github.event.inputs.build_type == 'release' }}
        run: |
          if [ "${{ github.event.inputs.flavor }}" == "production" ]; then
            flutter build apk --release --flavor production -t lib/main_production.dart
          else
            flutter build apk --release --flavor staging -t lib/main_staging.dart
          fi

      - name: Build Freewave Android debug app
        if: ${{ github.event.inputs.build_type == 'debug' }}
        run: |
          if [ "${{ github.event.inputs.flavor }}" == "production" ]; then
            flutter build apk --debug --flavor production -t lib/main_production.dart
          else
            flutter build apk --debug --flavor staging -t lib/main_staging.dart
          fi

      - name: Verify APK file exists
        run: ls -lh build/app/outputs/flutter-apk/

      - name: Create release tag if it doesn't exist
        if: ${{ github.event.inputs.build_type == 'release' }}
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: v${{ github.event.inputs.version }}
          tag_prefix: ""
          create_annotated_tag: true
          message: "Release v${{ github.event.inputs.version }}"

      - name: Upload Freewave APK to release
        if: ${{ github.event.inputs.build_type == 'release' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_TOKEN }}
          file: build/app/outputs/flutter-apk/app-${{ github.event.inputs.flavor }}-${{ github.event.inputs.build_type }}.apk
          asset_name: Freewave-${{ github.event.inputs.version }}-${{ github.event.inputs.flavor }}.apk
          tag: v${{ github.event.inputs.version }}
          overwrite: true
          body: "Freewave Android app version ${{ github.event.inputs.version }} (${{ github.event.inputs.flavor }})"

      - name: Upload artifact to workflow
        uses: actions/upload-artifact@v2
        with:
          name: freewave-${{ github.event.inputs.version }}-${{ github.event.inputs.flavor }}-${{ github.event.inputs.build_type }}
          path: build/app/outputs/flutter-apk/app-${{ github.event.inputs.flavor }}-${{ github.event.inputs.build_type }}.apk
          retention-days: 14
